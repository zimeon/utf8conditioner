4  Overlong sequences                                                         |
                                                                              |
The following sequences are not malformed according to the letter of          |
the Unicode 2.0 standard. However, they are longer then necessary and         |
a correct UTF-8 encoder is not allowed to produce them. A "safe UTF-8         |
decoder" should reject them just like malformed sequences for two             |
reasons: (1) It helps to debug applications if overlong sequences are         |
not treated as valid representations of characters, because this helps        |
to spot problems more quickly. (2) Overlong sequences provide                 |
alternative representations of characters, that could maliciously be          |
used to bypass filters that check only for ASCII characters. For              |
instance, a 2-byte encoded line feed (LF) would not be caught by a            |
line counter that counts only 0x0a bytes, but it would still be               |
processed as a line feed by an unsafe UTF-8 decoder later in the              |
pipeline. From a security point of view, ASCII compatibility of UTF-8         |
sequences means also, that ASCII characters are *only* allowed to be          |
represented by ASCII bytes in the range 0x00-0x7f. To ensure this             |
aspect of ASCII compatibility, use only "safe UTF-8 decoders" that            |
reject overlong UTF-8 sequences for which a shorter encoding exists.          |
                                                                              |
4.1  Examples of an overlong ASCII character                                  |
                                                                              |
With a safe UTF-8 decoder, all of the following five overlong                 |
representations of the ASCII character slash ("/") should be rejected         |
like a malformed UTF-8 sequence, for instance by substituting it with         |
a replacement character. If you see a slash below, you do not have a          |
safe UTF-8 decoder!                                                           |
                                                                              |
4.1.1 U+002F = c0 af             = "¿Ø"                                        |
4.1.2 U+002F = e0 80 af          = "‡ÄØ"                                        |
4.1.3 U+002F = f0 80 80 af       = "ÄÄØ"                                        |
4.1.4 U+002F = f8 80 80 80 af    = "¯ÄÄÄØ"                                        |
4.1.5 U+002F = fc 80 80 80 80 af = "¸ÄÄÄÄØ"                                        |
                                                                              |
4.2  Maximum overlong sequences                                               |
                                                                              |
Below you see the highest Unicode value that is still resulting in an         |
overlong sequence if represented with the given number of bytes. This         |
is a boundary test for safe UTF-8 decoders. All five characters should        |
be rejected like malformed UTF-8 sequences.                                   |
                                                                              |
4.2.1  U-0000007F = c1 bf             = "¡ø"                                   |
4.2.2  U-000007FF = e0 9f bf          = "‡üø"                                   |
4.2.3  U-0000FFFF = f0 8f bf bf       = "èøø"                                   |
4.2.4  U-001FFFFF = f8 87 bf bf bf    = "¯áøøø"                                   |
4.2.5  U-03FFFFFF = fc 83 bf bf bf bf = "¸Éøøøø"                                   |
                                                                              |
4.3  Overlong representation of the NUL character                             |
                                                                              |
The following five sequences should also be rejected like malformed           |
UTF-8 sequences and should not be treated like the ASCII NUL                  |
character.                                                                    |
                                                                              |
4.3.1  U+0000 = c0 80             = "¿Ä"                                       |
4.3.2  U+0000 = e0 80 80          = "‡ÄÄ"                                       |
4.3.3  U+0000 = f0 80 80 80       = "ÄÄÄ"                                       |
4.3.4  U+0000 = f8 80 80 80 80    = "¯ÄÄÄÄ"                                       |
4.3.5  U+0000 = fc 80 80 80 80 80 = "¸ÄÄÄÄÄ"                                       |
THE END
